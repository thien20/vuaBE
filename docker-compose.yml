services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'vnexpress'
      MYSQL_ROOT_PASSWORD: 'admin123'
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    command: --innodb-buffer-pool-size=128M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "db", "-u", "root", "-padmin123"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app_network

  go-app:
    build:
      context: ./app
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      DB_USER: 'root'
      DB_PASSWORD: 'admin123'
      DB_HOST: 'db'
      DB_NAME: 'vnexpress'
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
      KAFKA_BROKER: 'kafka:29092'
    volumes:
      # - /mnt/d/MY_FOLDER/Project/vuaBE/app/config/config.json:/app/config/config.json
      - ./app/config/config.json:/app/config/config.json
    networks:
      - app_network

  python-consumer:
    container_name: python
    build:
      context: ./pipeline
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: 'kafka:29092'
    volumes:
      - ./app/config/config.json:/app/config/config.json
      - ./pipeline:/app  # Ensures the correct working directory
    networks:
      - app_network


  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:29092 --list || exit 1"]
      interval: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - zookeeper
    networks:
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app_network

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms128m -Xmx256m"
      - bootstrap.memory_lock=false
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - app_network
volumes:
  db_data:

networks:
  app_network:
    driver: bridge
